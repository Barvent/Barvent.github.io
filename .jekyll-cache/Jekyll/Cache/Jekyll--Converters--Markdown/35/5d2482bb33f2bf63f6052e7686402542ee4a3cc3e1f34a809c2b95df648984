I"G<p>FristiLeaks is an easy OSCP-like boot to root VM hosted on Vulnhub. The goal in this challenge is to obtain root in the box and read the flag.<br />
As stated in the Vulnhub page, there are minimum 2 ways to obtain a limited shell and 3 ways to obtain root.</p>
<h1>Network Scan</h1>
<p>In this case, the machine doesn’t tell us its IP address, so I used Nmap to scan the network and find it.
<img src="netScan.png" alt="Network Scan Result" />
I know that 192.168.56.1 is the gateway and 192.168.56.10 is the Kali machine, so 192.168.56.128 must be the target box.
<br /><br /></p>
<h1>Port Scan</h1>
<p>The port scan reveals lots of open ports, including one which is unusally high. 
<img src="allPortsScan.png" alt="Port scan result" />
<br /></p>
<h1>FTP Anonymous Login</h1>
<p>Port 21 has a ftp server with anonymous access configured, as shown in the Nmap output.
<img src="ftpNmap.png" alt="FTP Nmap output" />
Just from connecting we get a possible user (Harry) and using user = anonymous and any password we get anonymous access, with allows use to read a file with two possible usernames (Elly and John).
<img src="ftpAnon1.png" alt="FTP Anon 1" />
<img src="ftpAnon2.png" alt="FTP Anon 2" /></p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><span class="n">Elly</span><span class="p">,</span> <span class="n">make</span> <span class="n">sure</span> <span class="n">you</span> <span class="n">update</span> <span class="n">the</span> <span class="n">payload</span> <span class="n">information</span><span class="p">.</span> <span class="n">Leave</span> <span class="n">it</span> <span class="n">in</span> <span class="n">your</span> <span class="n">FTP</span> <span class="n">account</span> <span class="n">once</span> <span class="n">your</span> <span class="n">are</span> <span class="n">done</span><span class="p">,</span> <span class="n">John</span><span class="p">.</span></code></pre></figure>

<p>Reading other people write-ups I found that Elly uses the password ylle for her ftp account, but I used another method to get access.
<br /><br /></p>
<h1>HTTP Port 80</h1>
<p>Here there isn’t anything interesting, using gobuster we can find that it is serving a home directory but I didn’t find anything useful.
<img src="root80.png" alt="Root HTTP 80" />
<img src="gobuster80.png" alt="Gobuster HTTP 80" />
<br /></p>
<h1>Samba Enumeration</h1>
<p>Port 139 has a Samba server which allows Guest login. There isn’t anything interesting inside the shares, but using enum4linux we can enumerate the users.
<img src="smbmap.png" alt="SMBMap" />
<img src="enum4linux.png" alt="enum4linux users" />
<br /></p>
<h1>Obtaining Credentials (Method 1)</h1>
<p>At this point I got stucked because of the rabbit holes in the other ports (except 12380, but I will talk about this one in the second method). I tried using Hydra to bruteforce the ftp credentials, using the user list as input for both the user and the password.
<img src="hydraFTP.png" alt="Hydra ftp" />
If we enter access the ftp server using these credentials we get access to the /etc/ directory. I searched for sensible information inside the directory, but I only found the /etc/password file which contains all the users inside of the box.
I used the same method as before to bruteforce the credentials for the ssh, only to find out that SHayslett uses the same password as before for his user account.
<img src="hydraSSH.png" alt="Hydra ssh" />
<br /></p>
<h1>Method 2</h1>
<p>At first glance port 12380 doesn’t have anything (except for another username), but if we inspect the responses using Burpsuite we can see that something is odd, the server always responds with a 400 Bad Request.
<img src="root12380_1.png" alt="Root HTTP 12380 1" />
<img src="comment12380_1.png" alt="Comment with user" />
<img src="burpIntercept.png" alt="Burp intercept" />
Using Nikto we can see that the server wants to use HTTPS, that’s why we are getting a 400 response. Also, we can see that there is a robots.txt file with some disallowed entries.
<img src="nikto.png" alt="Nikto" />
The /admin112233 is a troll page, while the /blogblog has a Wordpress blog.</p>
:ET